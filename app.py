# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kwRMsK-233y8DwZcATP3VPez9Y1KI4Mo
"""

import streamlit as st
import pickle
import pandas as pd

# Load model
with open('xgboost_student_status.pkl', 'rb') as file:
    model = pickle.load(file)

# Load scaler
with open('scaler.pkl', 'rb') as file:
    scaler = pickle.load(file)

# Load daftar fitur yang digunakan saat training
with open('selected_features.pkl', 'rb') as file:
    selected_features = pickle.load(file)

st.title("Student Status Prediction")

# Buat inputan untuk semua fitur
user_input = {
    "Application_order": st.number_input("Application Order", min_value=1, max_value=10, value=1),
    "Previous_qualification_grade": st.number_input("Previous Qualification Grade", min_value=0.0, max_value=200.0, value=140.0),
    "Admission_grade": st.number_input("Admission Grade", min_value=0.0, max_value=200.0, value=140.0),
    "Curricular_units_1st_sem_enrolled": st.number_input("Curricular Units 1st Sem Enrolled", min_value=0, max_value=20, value=6),
    "Curricular_units_2nd_sem_enrolled": st.number_input("Curricular Units 2nd Sem Enrolled", min_value=0, max_value=20, value=6),
    "Curricular_units_1st_sem_grade": st.number_input("Curricular Units 1st Sem Grade", min_value=0.0, max_value=20.0, value=11.83),
    "Curricular_units_2nd_sem_grade": st.number_input("Curricular Units 2nd Sem Grade", min_value=0.0, max_value=20.0, value=11.86),
    "GDP": st.number_input("GDP", min_value=0.0, max_value=10.0, value=1.79),
    "Gender_M": st.selectbox("Gender", ["Laki-laki", "Perempuan"]) == "Laki-laki",
    "Daytime_evening_attendance_Evening": st.selectbox("Jenis Kuliah", ["Siang", "Malam"]) == "Malam",
}

# Konversi input ke DataFrame
data_input = pd.DataFrame([user_input])

# Pastikan input memiliki semua fitur
data_input = data_input.reindex(columns=selected_features, fill_value=0)

# Lakukan scaling
data_scaled = scaler.transform(data_input)

if st.button("Predict"):
    prediction = model.predict(data_scaled)
    result = ["Dropout", "Enrolled", "Graduate"][prediction[0]]
    st.write(f"### Hasil Prediksi: {result}")

